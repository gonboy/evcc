#ifndef AUDIO_H
#define AUDIO_H

#include <QAudioInput>
#include <QAudioOutput>
#include <QThread>
#include <QVector>
#include <QAudio>

//! The abstract Audio class.
/*!
    This class contains the initialisation and stop functions of the audio input and output.
 */
class Audio : public QObject
{
    Q_OBJECT
public:

    //! Constructor Audio class.
    /*!
        Initialize the audio input/output.
        \param format Format parameter of the audio input/output
        \param device Chosen device for audio input/output
        \param byteList List of audio parts
        \param mode input/output
     */
    Audio(QAudioFormat format, QAudioDeviceInfo device, QList<QByteArray> * byteList, QAudio::Mode mode);

    //! Virtual function for the start function of the audio input/output.
    /*!
        Must be implmented.
     */
    virtual void start() = 0;

    //! Virtual function for the stop function of the audio input/output.
    /*!
        Must be implmented.
     */
    virtual void stop()  = 0;

    //! Mode of the audiodevice.
    /*!
        \return Mode input/output
     */
    QAudio::Mode mode();

private:
    QAudio::Mode          _mode; //!< Mode of the audiodevice

protected:

    //! Initialisation of the input audio.
    /*!
        Stops the running audio input and generates a new audio interface.
     */
    void initInput();

    //! Initialisation of the output audio.
    /*!
        Stops the running audio output and generates a new audio interface.
     */
    void initOutput();

    //! Stops the running audio input.
    /*!
        Only before a interface was generated.
     */
    void stopInput();

    //! Stops the running audio output.
    /*!
        Only before a interface was generated.
     */
    void stopOutput();

protected:
    QAudioDeviceInfo      _device;      //!< Device for the audio input/output
    QAudioFormat          _format;      //!< Specified format of the audio data
    QAudioInput         * _audioInput;  //!< Audio input interface
    QAudioOutput        * _audioOutput; //!< Audio output interface

    //! List of audio parts.
    /*!
        Generated by the audio input ore used for the audio output.
     */
    QList<QByteArray>   * _byteList;

protected slots:

    //! Called by finished signal from thread.
    /*!
        Disconnect and delete thread.
     */
    virtual void finishedThread();

    //! Called by statechange of audio interface.
    /*!
        Disconnect and delete interface by stopped state.
        \param state State of audio
     */
    void finishedAudio( QAudio::State state );

signals:
    void finished(); //!< Audio stopped
};

#endif // AUDIO_H
